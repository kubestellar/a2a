name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev
        
    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/ --fix
        
    - name: Check formatting with black
      run: |
        uv run black src/ tests/ --check --diff || echo "Formatting issues found - run 'black src/ tests/' to fix"
        
    - name: Type check with mypy (non-blocking)
      run: |
        uv run mypy src/ --ignore-missing-imports || echo "Type checking issues found - not blocking CI"
        
    - name: Run tests with pytest
      run: |
        uv run pytest tests/ -v --cov=src/ --cov-report=xml --cov-report=term
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      
    - name: Set up Python
      run: uv python install 3.11
      
    - name: Install dependencies
      run: uv sync --dev
      
    - name: Run security scan with bandit
      run: |
        uv run bandit -r src/ -ll || echo "Security issues found - please review"
        
    - name: Run safety check
      run: |
        uv run safety check || echo "Dependency security issues found - please review"

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      
    - name: Set up Python
      run: uv python install 3.11
      
    - name: Install dependencies
      run: uv sync --dev
      
    - name: Check import sorting with isort
      run: |
        uv add isort --dev
        uv run isort --check-only src/ tests/
        
    - name: Check code style with ruff
      run: |
        uv run ruff check src/ tests/ --output-format=github